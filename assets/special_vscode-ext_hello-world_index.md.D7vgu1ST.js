import{_ as i,c as a,o as e,af as n,ag as t,ah as l,ai as o,aj as p,ak as d,al as h,am as r,an as c,ao as k}from"./chunks/framework.B2PBXbS6.js";const C=JSON.parse('{"title":"HelloWorld","description":"","frontmatter":{},"headers":[],"relativePath":"special/vscode-ext/hello-world/index.md","filePath":"special/vscode-ext/hello-world/index.md"}'),E={name:"special/vscode-ext/hello-world/index.md"};function g(u,s,y,m,b,f){return e(),a("div",null,s[0]||(s[0]=[n(`<h1 id="helloworld" tabindex="-1">HelloWorld <a class="header-anchor" href="#helloworld" aria-label="Permalink to “HelloWorld”">​</a></h1><p>Vscode 官方提供了基于 <a href="https://github.com/yeoman/yeoman" target="_blank" rel="noreferrer">yeoman</a> 生态的脚手架 <a href="https://github.com/Microsoft/vscode-generator-code" target="_blank" rel="noreferrer">vscode-generator-code</a> 来生成项目结构，无需从 0 搭建。</p><h2 id="init" tabindex="-1">init <a class="header-anchor" href="#init" aria-label="Permalink to “init”">​</a></h2><p>在当前目录执行 <code>npx --package yo --package generator-code -- yo code</code> 将会出现交互式命令，根据向导填写信息一步步选择即可</p><div class="language-bat"><button title="Copy Code" class="copy"></button><span class="lang">bat</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># ? What </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> of extension do you want to create? New Extension (TypeScript)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># ? What&#39;s the name of your extension? HelloWorld</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">### Press </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Enter</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> to choose default </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> all options below ###</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># ? What&#39;s the identifier of your extension? helloworld</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># ? What&#39;s the description of your extension? LEAVE BLANK</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># ? Initialize a git repository? Y</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># ? Which bundler to use? unbundled</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># ? Which package manager to use? npm</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># ? Do you want to open the new folder with Visual Studio Code? Open with \`code\`</span></span></code></pre></div><p>然后我们就得到了一个 <code>HelloWorld</code> 的初始化工程项目，其中 <code>src\\extension.ts</code> 就是我们的入口文件，<code>.vscode</code> 中有一些预设文件。</p><p><img src="`+t+'" alt="dir"></p><h2 id="环境配置" tabindex="-1">环境配置 <a class="header-anchor" href="#环境配置" aria-label="Permalink to “环境配置”">​</a></h2><p>使用 <code>VsCode</code> 打开项目会发现在 <code>.vscode\\extensions.json</code> 中推荐安装 <code>dbaeumer.vscode-eslint</code> <code>connor4312.esbuild-problem-matchers</code> <code>ms-vscode.extension-test-runner</code> 三个插件用于开发</p><p>也可以直接在插件 Tab 中搜索 @recommended 直接安装</p><p><img src="'+l+'" alt="install-ext"></p><h2 id="run" tabindex="-1">Run <a class="header-anchor" href="#run" aria-label="Permalink to “Run”">​</a></h2><p>项目在 <code>.vscode\\launch.json</code> 中预设了启动器即命令，我们可以在入口文件 <code>src\\extension.ts</code> 下直接按 <code>F5</code> 启动项目，此时会弹出一个新的 “预装” 了我们当前插件的 <code>VsCode</code> 窗口便于我们查看效果，Title 中会有 <code>扩展开发宿主</code> 字样。</p><p><img src="'+o+'" alt="view-vscode"></p><blockquote><p>为了方便描述，后续我们将编辑项目的 VsCode 称为 <code>代码窗</code>， 显示效果的 VsCode 称为 <code>结果窗</code></p></blockquote><p>在<code>结果窗</code>中通过 <code>Ctrl+Shift+P</code> 唤起命令面板，执行 <code>Hello World</code></p><p><img src="'+p+'" alt="run"></p><p>将会在 <code>结果窗</code> 的右下角看到 <code>Hello World</code> 字样的弹窗，以及在 <code>代码窗</code> 的控制台看到代码中 <code>console</code> 的输出。</p><p><img src="'+d+'" alt="result"></p><h2 id="reload" tabindex="-1">Reload <a class="header-anchor" href="#reload" aria-label="Permalink to “Reload”">​</a></h2><p>代码不是热重载的，修改完代码后需要在 <code>结果窗</code> 中执行 <code>Reload Window</code>, 或者按快捷键 <code>Ctrl + Alt + R</code> 手动重载</p><blockquote><p>看到别人都是说 <code>Ctrl + R</code>，我的快捷键大概率是错的，经历 brackets -&gt; Sublime -&gt; Atom -&gt; Vscode，我的快捷键已经自成一派了…… =.=!</p></blockquote><p><img src="'+h+'" alt="reload"></p><p>或者在 <code>编辑窗</code> 中执行 <code>Ctrl + Shift +F5</code></p><p><img src="'+r+`" alt="reload2"></p><p>上述两种官方推荐都很蛋疼，建议在 <code>package.json</code> 中增加</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">    ...</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;contributes&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">            ...</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            &quot;menus&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                &quot;editor/context&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                        &quot;when&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;editorFocus&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                        &quot;command&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;workbench.action.reloadWindow&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                        &quot;group&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;navigation&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        },</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">    ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>就可以在 <code>结果窗</code> 中得到一个右键快捷重载的命令，也可以将你需要 debug 的命令放进去。</p><p>当然最后在上线时需要移除，最讨厌在右键菜单中塞各种命令导致右键长的吓人……</p><p><img src="`+c+'" alt="menu-reload"></p><h2 id="debug" tabindex="-1">Debug <a class="header-anchor" href="#debug" aria-label="Permalink to “Debug”">​</a></h2><p>直接在 <code>编辑窗</code> 行号左侧点击添加断点即可，在控制台能看到输出，右侧面板能看到上下文，还有个小工具栏可以步进等，基本和 Chrome 开发工具类似。</p><p><img src="'+k+'" alt="debug"></p><p>此时我们已经具备 VsCode 插件的开发能力了。</p>',34)]))}const F=i(E,[["render",g]]);export{C as __pageData,F as default};
